name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Run tests
        run: "deno test"

      - name: Build step
        run: |
          deno compile --target x86_64-unknown-linux-gnu  --allow-read --allow-write --output tcx-ls-linux-x86_64       main.ts
          deno compile --target aarch64-unknown-linux-gnu --allow-read --allow-write --output tcx-ls-linux-arm64        main.ts
          deno compile --target aarch64-apple-darwin      --allow-read --allow-write --output tcx-ls-macos-arm64        main.ts
          deno compile --target x86_64-apple-darwin       --allow-read --allow-write --output tcx-ls-macos-x86_64       main.ts
          deno compile --target x86_64-pc-windows-msvc    --allow-read --allow-write --output tcx-ls-windows-x86_64.exe main.ts

      - name: Upload Linux x86_64
        uses: actions/upload-artifact@v4
        with:
          name: tcx-ls-linux-x86_64
          path: ./tcx-ls-linux-x86_64

      - name: Upload Linux arm64
        uses: actions/upload-artifact@v4
        with:
          name: tcx-ls-linux-arm64
          path: ./tcx-ls-linux-arm64

      - name: Upload macOS arm64
        uses: actions/upload-artifact@v4
        with:
          name: tcx-ls-macos-arm64
          path: ./tcx-ls-macos-arm64

      - name: Upload macOS x86_64
        uses: actions/upload-artifact@v4
        with:
          name: tcx-ls-macos-x86_64
          path: ./tcx-ls-macos-x86_64

      - name: Upload Windows x86_64
        uses: actions/upload-artifact@v4
        with:
          name: tcx-ls-windows-x86_64.exe
          path: ./tcx-ls-windows-x86_64.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Release latest
          body: "Automated release for latest"

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tcx-ls-linux-x86_64
          asset_name: tcx-ls-linux-x86_64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tcx-ls-linux-arm64
          asset_name: tcx-ls-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows x86_64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tcx-ls-windows-x86_64.exe
          asset_name: tcx-ls-windows-x86_64.exe
          asset_content_type: application/octet-stream          